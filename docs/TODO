> Conventions:
> \# is used for BIG stages: going from MVP to stable should have a change in title.
> \#\# is used for tasks. tasks can carry an arbitrary number of chores, marked with []. chores can also appear inside a single # title. 
> tasks that depend on other tasks being completed are marked with a <previous-task> tag at the beginning of the title


# Start - Setup tools

[] Add previous documentation of Cmake-test for information about flags

[X] Add support for tests using the CMake-test ones.  

[X] Adapt workflows from CMake-test to work: needs to download wxWidgets

[X] Add support for benchmark using the CMake-test ones

[X] Fix workflows to make them compatible when they run, When run on linux to develop and when run on windows to develop

[X] Pack Linux as an AppImage

[X] Create icon images with distinct sizes

[X] AppImage does not open when double clicking it 

[] (Later in project) Add metadata to Appimage:
    [] The template for the file is already inside appImage.cmake -> sign the appImage, add screenshots...
        https://docs.appimage.org/packaging-guide/optional/signatures.html
        https://www.gnupg.org/gph/es/manual/x154.html
    [] When you enter a stable version (1.x.x) replace the string inside appImage.cmake called PROJECT_VERSION_SHORT inside the xml metadata file

[] (Later in project) Distribute files correctly insdie AppDir:
    [] the structure inside the AppDir should mirror the one on the system, even though the app will go to the system files


[X] add wxwidget libraries automatically to appimage when building

[/] .desktop has lots of functionalities. Look at usr/share/applications/libreoffice-math.desktop

[] Add a dialog that shows up when pressing uninstall on linux. For it, uninstall.sh should call an executable that uses wxWidgets to show a dialogue that asks to uninstall

[] Optional: Add more actions in the linux .desktop for things like Add Workspace or Load Workspace

[] when user installs a copy again, resolve the conflicts with the previous install --IMPORTANT
    - Problems associated with this: Version control for end users: What happens when a user downloads an AppImage that has a newer version than the old one? What happens on the opposite case? Solution may e to create a built-in package manager. Installing and uninstalling already works. The problem comes when user downloads multiple releases or old ones...

    [] for this: create dialogs that pop up when trying to install a release that's already installed. When downloading differing versions: 

[X] maybe take out .tgz from the releases

# MVP

## 1. Windowing backend structure:
   [] X11 and WIN32 API need to be used inside the project. 
   [] File/Folder structure for support of the backend needs to be added, for CMake and for the code itself. here will go an explanation of how to implement the backend


## <1> 2. Use backend inside the project: files and connecting the backend with them

   [] The program needs to save information about the workspace. To do this, DeskUp must save folders and files with the necessary information. Decide where this files and folders go. The way to go should be to leave them visible. the user can do whatever it wants with them. advice to not touch them if the user is not familiar with them. this way people have freedom over the use of the software

   [] For the workspaces, a file for each window should be used. Each workspace will be a folder containing all the files of the window.

   [] Decide the structure of the file itself: what goes inside? which pattern does it follow? (...)

   [] The process of saving is pretty much straightforward, but loading workspaces needs an intermediate level. Find a good to connect the backend with this information.

   